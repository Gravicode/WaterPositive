@inject WaterPositive.Web.Data.UserProfileService Userservice
<MudNavMenu>
    <MudNavLink Href="" Match="NavLinkMatch.All" Icon="@Icons.Material.Filled.Home">Beranda</MudNavLink>
     <MudNavGroup Icon="@Icons.Filled.DataObject" Title="Master Data" Expanded="false">
        <MudNavLink Href="/master/Userprofile" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.People">Data User</MudNavLink>
        @if (MyRole == Roles.Admin)
        {
            <MudNavLink Href="/master/WaterDepot" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.AddBox">Water Depot</MudNavLink>
            <MudNavLink Href="/master/WaterPrice" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Money">Water Price</MudNavLink>
            <MudNavLink Href="/master/CCTV" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Camera">CCTV</MudNavLink>
            <MudNavLink Href="/master/DataCounter" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.TableChart">Data Counter</MudNavLink>
            <MudNavLink Href="/master/SensorData" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Thermostat">Sensor Data</MudNavLink>
            <MudNavLink Href="/master/UsageLimit" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Stop">Usage Limit</MudNavLink>
        }
    </MudNavGroup>
    <MudNavGroup Icon="@Icons.Filled.Dashboard" Title="Reports" Expanded="false">
        <MudNavLink Href="/master/WaterUsage" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Info">Water Usage</MudNavLink>
        @if (MyRole == Roles.Admin)
        {
            <MudNavLink Href="/report/ReportPeople" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.TableRows">Laporan Statistik Orang/Sepeda</MudNavLink>
            <MudNavLink Href="/report/ReportWeather" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.MultilineChart">Laporan Statistik Cuaca</MudNavLink>
            <MudNavLink Href="/cctv" Match="NavLinkMatch.Prefix" Icon="@Icons.Material.Filled.Camera">CCTV Stream</MudNavLink>
        }
    </MudNavGroup>
</MudNavMenu>

@code{
    [CascadingParameter]
    private Task<AuthenticationState> authenticationStateTask { get; set; }
    string UserName;
    Roles MyRole = Roles.Unknown;
    bool HasLogin = false;
    protected override async Task OnInitializedAsync()
    {
        var user = (await authenticationStateTask).User;
        if (user.Identity.IsAuthenticated)
        {
            UserName = user.Identity.Name;
            HasLogin = true;
            MyRole = Userservice.GetUserRole(UserName);
        }
    }
}