@page "/index"
@page "/"
@layout EmptyLayout
@using System.Text.RegularExpressions
@using System.ComponentModel.DataAnnotations
@using ZXingBlazor.Components
@inject NavigationManager NavMgr
@inject UserProfileService UserSvc
@inject AppState AppState
@inject IJSRuntime IJS
<div class="container">
    <div class="header">
        <div class="logos">
            <a class="logo-water" href="/"><img src="assets/img/water-positif.svg" alt=""></a>
            <a class="logo-aws" href=""><img src="assets/img/aws.svg" alt=""></a>
            <a class="logo-habitat" href=""><img src="assets/img/habitat-id.svg" alt=""></a>
            <a class="logo-alkademi" href=""><img src="assets/img/alkademi.svg" alt=""></a>
        </div>
        <div class="title">
            OUTLET AIR BERSIH
        </div>
    </div>
    <div class="message">
        Silahkan Scan QR dengan kartu Anda atau masukkan No Kartu dan PIN
    </div>
    <div class="content">
        <form action="">
            <div class="input">
                <label for="txtNoKartu">No Kartu</label>
                <input type="text" @bind="UID" @onkeyup="KeyUp"  id="txtNoKartu" />
            </div>
            <div class="input">
                <label for="txtPin">PIN</label>
                <input type="text" @bind="PIN" @onkeyup="KeyUp" id="txtPin" />
            </div>
            @if (errors.Count > 0)
            {
                <div class="input">
                    <label for="txtPin">Error</label>
                    <ul class="alert alert-warning">
                        @foreach (var error in errors)
                        {
                            <li>@error</li>
                        }
                    </ul>               
            </div>
            }
        </form>
    </div>
</div>
<div class="footer">
    <button class="green" @onclick="@(()=>Submit())">Masuk</button>
    <button class="gray" @onclick="@(()=>Reset())">Ulang</button>
    <button style="display:none;" class="orange" @onclick="ShowScanner">Scan QR</button>
</div>

@if (ShowScanBarcode)
{
    <BarcodeReader ScanResult="((e) => { UID =e; ShowScanBarcode = !ShowScanBarcode; })"
               ShowScanBarcode="ShowScanBarcode"
               Close="(()=>ShowScanBarcode=!ShowScanBarcode)"
               ScanBtnTitle="Scan"
               ResetBtnTitle="Reset"
               CloseBtnTitle="Close"
               SelectDeviceBtnTitle="Select Device" />
}
@code {
    async Task Reset()
    {
        PIN = string.Empty;
        UID = string.Empty;
        await IJS.InvokeVoidAsync("SetFocus", "txtNoKartu");
    }
    async Task KeyUp(KeyboardEventArgs e)
    {
        if (e.Key == "Enter")
        {
            Submit();
        }
    }
    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await IJS.InvokeVoidAsync("SetFocus", "txtNoKartu");
            //if (txtUID != null) txtUID.AutoFocus = true;
        }
    }
    protected override void OnInitialized()
    {
    }
    async Task ShowScanner()
    {
        ShowScanBarcode = !ShowScanBarcode;
    }
    bool success;
    bool ShowScanBarcode = false;
    List<string> errors = new();
    MudForm form;
    string UID, PIN;
    private IEnumerable<string> CheckPin(string pin)
    {
        if (string.IsNullOrEmpty(UID))
            yield return "Input UID first";
        var res = UserSvc.GetDataByUID(UID);
        if (res != null)
        {
            if (!string.IsNullOrEmpty(res.PIN))
                if (string.IsNullOrEmpty(pin))
                {
                    IJS.InvokeVoidAsync("SetFocus", "txtPin");
                    //txtPIN.FocusAsync();
                    yield return "please input PIN.";
                }
                else
                if (res.PIN != pin)
                {
                    yield return "wrong PIN, try again.";
                }
        }
        else
        {
            yield return "Unknown UID, try again.";
        }

    }

    async Task Submit()
    {
        if (AppConstants.NeedMaintenance)
        {
            MessageBox.Show("Maaf device mengalami kendala, hubungi petugas. Perlu prosedur reset.","Terjadi Problem");
        }
        var res = CheckPin(PIN);
        if (res.Any())
        {
            errors.Clear();
            errors.AddRange(res);
        }
        else
        {
            var user = UserSvc.GetDataByUID(UID);
            AppState.CurrentUser = user;
            NavMgr.NavigateTo("outlet");
        }
    }

}